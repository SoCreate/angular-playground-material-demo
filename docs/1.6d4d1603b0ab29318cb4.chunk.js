webpackJsonp([1],{d8AR:function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var a=t("9W2h"),n=t("LMZF"),l=this&&this.__decorate||function(e,o,t,a){var n,l=arguments.length,i=l<3?o:null===a?a=Object.getOwnPropertyDescriptor(o,t):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,o,t,a);else for(var m=e.length-1;m>=0;m--)(n=e[m])&&(i=(l<3?n(i):l>3?n(o,t,i):n(o,t))||i);return l>3&&i&&Object.defineProperty(o,t,i),i},i=this&&this.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},m=function(){function e(){}return e.prototype.ngOnInit=function(){},e=l([Object(n.m)({selector:"app-select",template:"\n    <p>\n      select works!\n    </p>\n  ",styles:[]}),i("design:paramtypes",[])],e)}(),p=t("hxQ8"),r=t("0nO6");o.default=Object(a.d)(m,{imports:[p.a,r.e,r.j]}).add("Basic Select",{template:'\n        <mat-form-field>\n            <mat-select placeholder="Favorite food">\n                <mat-option *ngFor="let food of foods" [value]="food.value">\n                    {{ food.viewValue }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        ',context:{foods:[{value:"steak-0",viewValue:"Steak"},{value:"pizza-1",viewValue:"Pizza"},{value:"tacos-2",viewValue:"Tacos"}]}}).add("Select with 2-way value binding",{template:'\n        <mat-form-field>\n            <mat-select [(value)]="selected">\n                <mat-option>None</mat-option>\n                <mat-option value="option1">Option 1</mat-option>\n                <mat-option value="option2">Option 2</mat-option>\n                <mat-option value="option3">Option 3</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <p>You selected: {{selected}}</p>\n        ',context:{selected:"option2"}}).add("Select in a form",{template:'\n        <form>\n            <mat-form-field>\n                <mat-select placeholder="Favorite food" [(ngModel)]="selectedValue" name="food">\n                    <mat-option *ngFor="let food of foods" [value]="food.value">\n                    {{food.viewValue}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <p> Selected value: {{selectedValue}} </p>\n        </form>\n        ',context:{selectedValue:"",foods:[{value:"steak-0",viewValue:"Steak"},{value:"pizza-1",viewValue:"Pizza"},{value:"tacos-2",viewValue:"Tacos"}]}}).add("Select with form field features",{template:'\n        <mat-form-field>\n            <mat-select placeholder="Favorite animal" [formControl]="animalControl" required>\n                <mat-option>--</mat-option>\n                <mat-option *ngFor="let animal of animals" [value]="animal">\n                {{animal.name}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf="animalControl.hasError(\'required\')">Please choose an animal</mat-error>\n            <mat-hint>{{animalControl.value?.sound}}</mat-hint>\n        </mat-form-field>\n        ',context:{animalControl:new r.b("",[r.k.required]),animals:[{name:"Dog",sound:"Woof!"},{name:"Cat",sound:"Meow!"},{name:"Cow",sound:"Moo!"},{name:"Fox",sound:"Wa-pa-pa-pa-pa-pa-pow!"}]}}).add("Disabled select",{template:'\n        <p>\n            <mat-checkbox [formControl]="disableSelect">Disable select</mat-checkbox>\n        </p>\n        <p>\n            <mat-form-field>\n                <mat-select placeholder="Choose an option" [disabled]="disableSelect.value">\n                    <mat-option value="option1">Option 1</mat-option>\n                    <mat-option value="option2" disabled>Option 2 (disabled)</mat-option>\n                    <mat-option value="option3">Option 3</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </p>\n        ',context:{disableSelect:new r.b(!1)}}).add("Select with option groups",{template:'\n        <mat-form-field>\n            <mat-select placeholder="Pokemon" [formControl]="pokemonControl">\n                <mat-option>-- None --</mat-option>\n                <mat-optgroup *ngFor="let group of pokemonGroups" [label]="group.name"\n                            [disabled]="group.disabled">\n                    <mat-option *ngFor="let pokemon of group.pokemon" [value]="pokemon.value">\n                        {{ pokemon.viewValue }}\n                    </mat-option>\n                </mat-optgroup>\n            </mat-select>\n        </mat-form-field>\n        ',context:{pokemonControl:new r.b,pokemonGroups:[{name:"Grass",pokemon:[{value:"bulbasaur-0",viewValue:"Bulbasaur"},{value:"oddish-1",viewValue:"Oddish"},{value:"bellsprout-2",viewValue:"Bellsprout"}]},{name:"Water",pokemon:[{value:"squirtle-3",viewValue:"Squirtle"},{value:"psyduck-4",viewValue:"Psyduck"},{value:"horsea-5",viewValue:"Horsea"}]},{name:"Fire",disabled:!0,pokemon:[{value:"charmander-6",viewValue:"Charmander"},{value:"vulpix-7",viewValue:"Vulpix"},{value:"flareon-8",viewValue:"Flareon"}]},{name:"Psychic",pokemon:[{value:"mew-9",viewValue:"Mew"},{value:"mewtwo-10",viewValue:"Mewtwo"}]}]}}).add("Select with multiple selection",{template:'\n        <mat-form-field>\n            <mat-select placeholder="Toppings" [formControl]="toppings" multiple>\n                <mat-option *ngFor="let topping of toppingList" [value]="topping">{{topping}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        ',context:{toppings:new r.b,toppingList:["Extra cheese","Mushroom","Onion","Pepperoni","Sausage","Tomato"]}})}});